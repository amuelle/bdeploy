@use '@angular/material' as mat;

@include mat.core();

@import 'app-common.scss';
@import 'app-externals.scss';
@import 'dragular.scss';
@import 'app-ngx-charts-dark.scss';
@import 'app-scrollbars.scss';
@import 'app-palettes.scss';

@import 'app/modules/core/components/bd-popup/bd-popup-theme.scss';
@import 'app/modules/core/components/bd-image-upload/bd-image-upload-theme.scss';
@import 'app/modules/core/components/bd-form-toggle/bd-form-toggle-theme.scss';

@import 'app/modules/primary/admin/components/admin-shell/admin-shell.theme.scss';

@mixin all-themes($theme) {
  @include mat.all-component-themes($theme);
  @include common-classes($theme);
  @include bd-popup-theme($theme);
  @include bd-image-upload-theme($theme);
  @include bd-form-toggle-theme($theme);

  @include settings-shell-theme($theme);

  $dark: map-get($theme, 'is-dark');
  $primary: map-get($theme, 'primary');
  $accent: map-get($theme, 'accent');
  $warn: map-get($theme, 'warn');
  $bg: map-get($theme, 'background');
  $fg: map-get($theme, 'foreground');
  $maintb: map-get($theme, 'main-toolbar');
  $maintb-dark: map-get($theme, 'main-toolbar-darker');
  $success: map-get($theme, 'success');

  // general element themings
  .mat-badge-content {
    background-color: rgb(194, 194, 194);
    color: black;
  }
  .mat-row:hover,
  .mat-card:hover {
    background-color: if($dark, #3e3e3e, #fafafa);
    transition: background-color 0.2s ease;
  }

  .mat-row-route-active,
  .mat-card-route-active,
  .mat-row-route-active:hover,
  .mat-card-route-active:hover {
    background-color: mat.get-color-from-palette($maintb-dark, 900, 0.1);
  }

  a {
    color: if($dark, mat.get-color-from-palette(mat.$blue-palette, 300), mat.get-color-from-palette(mat.$blue-palette, 800));
  }

  // Define scrollbar style on each element as it is not inherited in some cases.
  * {
    @include scrollbars(mat.get-color-from-palette(map-get($theme, 'primary')), if($dark, #555555, #cccccc));
  }

  // Pseudo selector to define variables on the main theme class.
  & {
    --bd-primary: #{mat.get-color-from-palette($primary)};
    --bd-accent: #{mat.get-color-from-palette($accent)};
    --bd-warn: #{mat.get-color-from-palette($warn)};
    --bd-warn-darker: #{mat.get-color-from-palette($warn, 900)};
    --bd-main-bar: #{mat.get-color-from-palette($maintb)};

    --bd-text: #{mat.get-color-from-palette($fg, 'text')};
    --bd-text-secondary: #{mat.get-color-from-palette($fg, 'secondary-text')};
    --bd-text-success: #{mat.get-color-from-palette($success)};
    --bd-text-very-light: #{if($dark, #aeaeae, #747474)};
    --bd-text-disabled: #{mat.get-color-from-palette($fg, 'disabled-text')};

    --bd-bg-dialog: #{mat.get-color-from-palette($bg, 'dialog')};
    --bd-bg-toolbar: #{mat.get-color-from-palette($bg, 'app-bar')};
    --bd-bg-hover: #{mat.get-color-from-palette($bg, 'hover')};
    --bd-bg-disabled: #{mat.get-color-from-palette($fg, base, if($dark, 0.05, 0.02))};
    --bd-bg-grey: #{mat.get-color-from-palette($fg, base, if($dark, 0.2, 0.4))};

    --bd-main-bar-darker: #{mat.get-color-from-palette($maintb-dark)};

    --bd-primary-contrast: #{mat.get-color-from-palette($primary, 'default-contrast')};
    --bd-accent-contrast: #{mat.get-color-from-palette($accent, 'default-contrast')};
    --bd-warn-contrast: #{mat.get-contrast-color-from-palette($warn, 900)};
    --bd-main-bar-contrast: #{mat.get-color-from-palette($maintb, 'default-contrast')};

    --bd-lighten-bg: #{if($dark, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.5))};
  }

  .inline-code {
    font-family: monospace;
    padding: 2px 4px;
    color: if($dark, white, black);
    background-color: if($dark, #333333, #eeeeee);
    border-radius: 3px;
  }
}

@mixin theme-chooser($theme) {
  $theme-bg: map-get($theme, 'background');
  $theme-primary: mat.get-color-from-palette(map-get($theme, 'primary'));
  $theme-accent: mat.get-color-from-palette(map-get($theme, 'accent'));
  $theme-main-tb: mat.get-color-from-palette(map-get($theme, 'main-toolbar'));

  .preview-background {
    cursor: pointer;
    display: block;
    position: relative;
    margin: 3px;
    width: 56px;
    height: 56px;
    box-sizing: border-box;
    border-radius: 4px;
    background-color: map-get($theme-bg, 'background');
  }

  .preview-accent {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    position: absolute;
    right: 4px;
    bottom: 4px;
    background-color: $theme-accent;
  }

  .preview-selected {
    width: 24px;
    height: 24px;
    position: absolute;
    right: 5px;
    top: 5px;
    color: $theme-accent;
  }

  .preview-circle {
    position: absolute;
    top: 9px;
    right: 9px;
    width: 34px;
    height: 34px;
    border-radius: 25%;
    background: linear-gradient(to right, $theme-main-tb 0%, $theme-main-tb 50%, $theme-primary 51%, $theme-primary 100%);
  }
}

/* Theme definitions - keep in sync with ThemeService.Theme */
@function add-custom-colors($theme, $toolbar-palette, $toolbar-darker-palette, $success-palette) {
  @return map-merge(
    $theme,
    (
      'main-toolbar': $toolbar-palette,
      'main-toolbar-darker': $toolbar-darker-palette,
      'success': $success-palette,
    )
  );
}

@function override-theme-background($theme, $key, $value) {
  $bg: map-get($theme, background);
  $bg: map-merge(
    $bg,
    (
      $key: $value,
    )
  );
  @return map-merge(
    $theme,
    (
      background: $bg,
    )
  );
}

/* light theme - default */
$app-light-primary: mat.define-palette($md-bdblue, 500);
$app-light-accent: mat.define-palette($md-bdblue, 500);
$app-light-warning: mat.define-palette($md-bdred, 500);
$app-light-theme: add-custom-colors(
  mat.define-light-theme($app-light-primary, $app-light-accent, $app-light-warning),
  $app-light-primary,
  mat.define-palette($md-bdblue, 700),
  mat.define-palette($md-bdgreen, 700)
);
.app-light-theme {
  @include all-themes($app-light-theme);
}
.app-light-theme-chooser {
  @include theme-chooser($app-light-theme);
}

/* dark theme */
$app-dark-primary: mat.define-palette($md-bdorange, 500);
$app-dark-accent: mat.define-palette($md-bdorange, 500);
$app-dark-warning: mat.define-palette($md-bdred, 500);
$app-dark-theme: add-custom-colors(
  mat.define-dark-theme($app-dark-primary, $app-dark-accent, $app-dark-warning),
  mat.define-palette($md-bdgrey, 500),
  mat.define-palette($md-bdgrey, 700),
  mat-define-palette($md-bdgreen, 700)
);
$app-dark-theme: override-theme-background($app-dark-theme, app-bar, #2e2e2e);
.app-dark-theme {
  @include all-themes($app-dark-theme);
  @include ngx-charts-dark();
}
.app-dark-theme-chooser {
  @include theme-chooser($app-dark-theme);
}
