name: BDeploy CI
on: [push]
jobs:
  build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout from GIT
      uses: actions/checkout@v1
      
    - name: Cache npm
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      
    - name: Cache gradle
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Setup JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.x

    - name: Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Build and Test
      if: matrix.os != 'macos-latest'
      run: ./gradlew --stacktrace clean build releaseTest -PrecordCypress '-Dtestlogger.theme=plain-parallel'

    - name: Build and Test (Mac)
      if: matrix.os == 'macos-latest'
      run: ./gradlew --stacktrace clean build -Dtestlogger.theme=plain-parallel
